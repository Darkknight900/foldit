Here you can find my scripts (recipes) for the game fold.it!

http://fold.it/portal/user/200415

--[[#Header
This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.
Thanks and Credits for external functions and ideas goes to Rav3n_pl, Tlaloc and Gary Forbis
Special thanks goes to Seagat
see http://www.github.com/Darkknight900/foldit/ for latest version of this script
]]

--#Game vars
Version     = "XXXX"
Release     = false          -- if true this script is probably safe ;)
numsegs     = get_segment_count()
--Game vars#

--#Settings: default
--#Working                  default     description
i_maxiter       = 5         -- 5        max. iterations an action will do | use higher number for a better gain but script needs a longer time
i_start_seg     = 1         -- 1        the first segment to work with
i_end_seg       = numsegs   -- numsegs  the last segment to work with
i_start_walk    = 0         -- 0        with how many segs shall we work - Walker
i_end_walk      = 4         -- 4        starting at the current seg + i_start_walk to seg + i_end_walk
b_lws           = false     -- false    do local wiggle and rewiggle
b_rebuild       = false     -- false    rebuild | see #Rebuilding
b_pp            = false     -- false    pull hydrophobic amino acids in different modes then fuze | see #Pull
b_str_re        = false     -- false    rebuild the protein based on the secondary structures | see #Structed rebuilding
b_cu            = false     -- false    Do bond the structures and curl it, try to improve it and get some points
b_snap          = false     -- false    should we snap every sidechain to different positions
b_fuze          = false     -- false    should we fuze | see #Fuzing
b_mutate        = false     -- false    it's a mutating puzzle so we should mutate to get the best out of every single option see #Mutating
b_predict       = false     -- false    reset and predict then the secondary structure based on the amino acids of the protein
b_sphered       = false     -- false    work with a sphere always, can be used on lws and rebuilding walker
b_explore       = false     -- false    if true then the overall score will be taken if a exploration puzzle, if false then just the stability score is used for the methods
--Working#

--#Scoring | adjust a lower value to get the lws script working on high evo- / solos, higher values are probably better rebuilding the protein
i_score_step    = 0.01      -- 0.01    an action tries to get this score, then it will repeat itself
i_score_gain    = 0.01      -- 0.01    Score will get applied after the score changed this value
--Scoring#

--#Mutating
b_m_new         = false     -- false    Will change _ALL_ mutatable, then wiggles out and then mutate again, could get some points for solo, at high evos it's not recommend
b_m_fuze        = true      -- true     fuze a change or just wiggling out (could get some more points but recipe needs longer)
b_m_fast        = false     -- false    will just change every seg to every mut without wiggling and see if there is a gain
b_m_through     = true
--Mutating#

--#Pull
b_comp          = false     -- false    try a pull of the two segments which have the biggest distance in between
i_pp_trys       = 1         -- 1        how often should the pull start over?
i_pp_loss       = 1         -- 1        the score / 100 * i_pp_loss is the general formula for calculating the points we must lose till we fuze
b_pp_local      = false     -- false
b_pp_mutate     = false
b_solo_quake    = false     -- false    just one seg is used on every method and all segs are tested
b_pp_pre_strong = true      -- true     bands are created which pull segs together based on the size, charge and isoelectric point of the amino acids
b_pp_pre_local  = false     -- false
b_pp_pull       = true      -- true     hydrophobic segs are pulled together
b_pp_push       = true      -- true
i_pp_bandperc   = 0.04      -- 0.04
i_pp_expand     = 2         -- 2
b_pp_fixed      = false     -- false
i_pp_fix_start  = 0         -- 0
i_pp_fix_end    = 0         -- 0
b_pp_centerpull = true      -- true     hydrophobic segs are pulled to the center segment
b_pp_centerpush = true      -- true
--Pull

--#Fuzing
b_fast_fuze     = false     -- false    not qstab is used here, a part of the Pink fuze which just loosen up the prot a bit and then wiggle it (faster than qstab, recommend for evo work where the protein is a bit stiff)
b_fuze_bf       = false     -- false    Bluefuse only!!! Only recommended at mutating puzzles
b_fuze_mut      = false
--Fuzing#

--#Snapping
--Snapping#

--#Rebuilding
--b_worst_rebuild = false     -- false    rebuild worst scored parts of the protein | NOT READY YET
i_max_rebuilds  = 2         -- 2        max rebuilds till best rebuild will be chosen 
i_rebuild_str   = 1         -- 1        the iterations a rebuild will do at default, automatically increased if no change in score
b_re_mutate     = true
--Rebuilding#

--#Predicting
b_predict_full  = false     -- try to detect the secondary structure between every segment, there can be less loops but the protein become impossible to rebuild
--Predicting#

--#Curler
b_cu_sh         = true      -- true
b_cu_he         = true      -- true
--Curler#

--#Structed rebuilding      default     description
i_str_re_max_re = 2         -- 2        same as i_max_rebuilds at #Rebuilding
i_str_re_re_str = 1         -- 1        same as i_rebuild_str at #Rebuilding
b_re_he         = true      -- true     should we rebuild helices
b_re_sh         = true      -- true     should we rebuild sheets
b_str_re_fuze   = false     -- false    should we fuze after one rebuild
--Structed rebuilding#
--Settings#