Here you can find my scripts (recipes) for the game fold.it!

http://fold.it/portal/user/200415

--[[#Header
This work is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License. To view a copy of this license, visit http://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.
Thanks and Credits for external functions and ideas goes to Seagat, Rav3n_pl, Tlaloc and Gary Forbis
see http://www.github.com/Darkknight900/foldit/ for latest version of this script
]]

--#Game vars
i_vers          = "XXXX"
i_segscount     = get_segment_count()
--#Release
b_release       = false
i_release_date  = "16. July 2011"
i_release_vers  = 3
--Release#
--Game vars#

--#Settings: default
--#Main
b_lws           = false         -- false        do local wiggle and rewiggle
b_rebuild       = false         -- false        rebuild | see #Rebuilding
b_pp            = false         -- false        pull hydrophobic amino acids in different modes then fuze | see #Pull
b_str_re        = false         -- false        rebuild the protein based on the secondary structures | see #Structed rebuilding
b_cu            = false         -- false        Do bond the structures and curl it, try to improve it and get some points
b_snap          = false         -- false        should we snap every sidechain to different positions
b_fuze          = false         -- false        should we fuze | see #Fuzing
b_mutate        = false         -- false        it's a mutating puzzle so we should mutate to get the best out of every single option see #Mutating
b_predict       = false         -- false        reset and predict then the secondary structure based on the amino acids of the protein
b_sphered       = false         -- false        work with a sphere always, can be used on lws and rebuilding walker
b_explore       = false         -- false        if true then the overall score will be taken if a exploration puzzle, if false then just the stability score is used for the methods
--Main#

--#Working                      default         description
i_start_seg     = 1             -- 1            the first segment to work with
i_end_seg       = i_segcount    -- i_segcount   the last segment to work with
i_start_walk    = 1             -- 1            with how many segs shall we work - Walker
i_end_walk      = 4             -- 3            starting at the current seg + i_start_walk to seg + i_end_walk
--Working#

--#Scoring | adjust a lower value to get the lws script working on high evo- / solos, higher values are probably better rebuilding the protein
i_score_change  = 0.01          -- 0.01         an action tries to get this score, then it will repeat itself
--Scoring#

--#Mutating
b_m_normal      = false         -- false
b_m_fast        = false         -- false        will just change every seg to every mut without wiggling and see if there is a gain
b_m_through     = false
b_m_testall     = false
b_m_after       = true
i_m_cl_mut      = 0.75          -- 0.75         cl for mutating
i_m_cl_wig      = 1             -- 1            cl for wiggling after mutating
--Mutating#

--#Pull
i_pp_trys       = 1             -- 1            how often should the pull start over?
i_pp_loss       = 1             -- 1            the score / 100 * i_pp_loss is the general formula for calculating the points we must lose till we fuze
b_pp_mutate     = false
b_pp_struct     = true          -- true         don't band segs of same structure together if segs are in one struct (between one helix or sheet)
i_pp_bandperc   = 0.05          -- 0.05
i_pp_len        = 4
b_pp_fixed      = false         -- false
i_pp_fix_start  = 0             -- 0
i_pp_fix_end    = 0             -- 0
b_pp_soft       = false
b_pp_fuze       = true
b_solo_quake    = false         -- false        just one seg is used on every method and all segs are tested
b_pp_local      = false         -- false
b_pp_pre_strong = true          -- true         bands are created which pull segs together based on the size, charge and isoelectric point of the amino acids
b_pp_pre_local  = false         -- false
b_pp_evo        = true          -- true
i_pp_evos       = 10
b_pp_push_pull  = true          -- true
b_pp_pull       = true          -- true         hydrophobic segs are pulled together
b_pp_c_pushpull = true          -- true
b_pp_centerpull = true          -- true         hydrophobic segs are pulled to the center segment
--Pull

--#Fuzing
b_fuze_pf       = true          -- true         Use Pink Fuze / Wiggle out
b_fuze_bf       = true          -- true         Use Bluefuse
b_fuze_qstab    = false         -- false        Use Qstab
--Fuzing#

--#Snapping
--Snapping#

--#Rebuilding
b_worst_rebuild = false         -- false        rebuild worst scored parts of the protein | NOT READY YET
b_worst_len     = 3
b_re_str        = false
b_re_walk       = true
i_max_rebuilds  = 1             -- 2            max rebuilds till best rebuild will be chosen 
i_rebuild_str   = 1             -- 1            the iterations a rebuild will do at default, automatically increased if no change in score
b_re_mutate     = false
--Rebuilding#

--#Predicting
b_predict_full  = true          -- try to detect the secondary structure between every segment, there can be less loops but the protein become difficult to rebuild
b_pre_add_pref  = true
b_pre_comb_str  = false
--Predicting#

--#Curler
b_cu_he         = true          -- true
b_cu_sh         = true          -- true
--Curler#

--#Structed rebuilding
i_str_re_max_re = 2             -- 2            same as i_max_rebuilds at #Rebuilding
i_str_re_re_str = 1             -- 1            same as i_rebuild_str at #Rebuilding
b_re_he         = true          -- true         should we rebuild helices
b_re_sh         = true          -- true         should we rebuild sheets
b_str_re_fuze   = false         -- false        should we fuze after one rebuild
--Structed rebuilding#
--Settings#