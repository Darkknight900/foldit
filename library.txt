function fsl.FastCenter() --by Rav3n_pl based on Tlaloc`s
	distances={}
    local minDistance = 100000.0
    local distance
    local indexCenter
    for i=1,numsegs-1 do
		distances[i]={}
        for j=i+1,numsegs do
            distances[i][j]=get_segment_distance(i,j)
        end
    end
	for i=1,numsegs do
        distance = 0
        for j=1,numsegs do
			if i~=j then
				local x=i
				local y=j
				if x>y then x,y=y,x end
				distance = distance + distances[x][y]
			end
        end
        if(distance < minDistance) then
             minDistance = distance
             indexCenter =  i
        end
    end
    return indexCenter
end

function fsl.CreateBandsToCenter()
dark.hydrocheck()
   local indexCenter = fsl.FastCenter()
   for i=1,numsegs do
       if(i ~= indexCenter) then
           if hydro[i] then
               band_add_segment_segment(i,indexCenter)
           end
       end
   end
end

function push()
    for x=1, numsegs - 2 do
        if not foldit.IsHydrophobic(x) then
            for y = x + 2, numsegs do
                if (not foldit.IsHydrophobic(y)) and (math.random() <= percentBands) then
                    local distance = foldit.GetSegmentDistance(x, y)
                    if  distance <= (20 - expand) then
                        BandAddBetweenSegments(x, y)
                        local band = foldit.GetBandCount()
                        foldit.BandSetStrength(band, 2.0)
                        foldit.BandSetLength(band, distance + expand)
                    end
                end
            end
        end
    end
end

function math.min(x,...)
  local min=x
  local args={...}
  for i=1,#args do
    if args[i]<min then
      min=args[i]
    end
  end
  return min
end

function math.floor(x)
  return x - (x%1)
end

numsegs=get_segment_count()
function getdistances()
	distances={}
    for i=1,numsegs-1 do
		distances[i]={}
        for j=i+1,numsegs do
            distances[i][j]=get_segment_distance(i,j)
        end
    end
	return distances
end

function check_hydro()
hydro={}
for i=1,numsegs do
hydro[i]=is_hydrophobic(i)
end
end

function bandmaxdist() --by Rav3n_pl based on Tlaloc`s
	distances={}
	distances=getdistances()
    local maxdistance=0
	for i=1,numsegs do
        for j=1,numsegs do
			if i~=j then
			    local x=i
				local y=j
				if x>y then x,y=y,x end
				if distances[x][y]>maxdistance then
				maxdistance=distances[x][y]
				maxx=i
				maxy=j
				end
			end
        end
    end
	band_add_segment_segment(maxx,maxy)
	repeat
	maxdistance=maxdistance*3/4
	until maxdistance<=20
	band_set_strength(get_band_count(),maxdistance/20)
	band_set_length(get_band_count(),maxdistance)

	for x=1, numsegs - 2 do
        if not hydro[x] then
            for y = x + 2, numsegs do
                if (not hydro[y]) and (math.random() <= 0.01) then
				maxdistance = distances[x][y]
                band_add_segment_segment(x, y)
				repeat
				maxdistance=maxdistance*3/4
				until maxdistance<=20
				band_set_strength(get_band_count(),maxdistance/20)
				band_set_length(get_band_count(),maxdistance)
                end
            end
        end
    end
end

p("Compressing Segment ",seg)
sphere={}
range=0
repeat
count=0
range=range+2
sphere=fsl.GetSphere(seg,range)
for n=1,#sphere-1 do
if sphere[n]>seg+range/4 and sphere[n]+1~=sphere[n+1] or sphere[n]<seg-range/4 and sphere[n]+1~=sphere[n+1] then
count=count+1
end
end
until count>4
for n=1,#sphere-1 do
if sphere[n]>seg+range/4 and sphere[n]+1~=sphere[n+1] or sphere[n]<seg-range/4 and sphere[n]+1~=sphere[n+1] then
band_add_segment_segment(seg,sphere[n])
local length=get_segment_distance(seg,sphere[n])
repeat
length=length*7/8
until length<=5
band_set_length(get_band_count(),length)
band_set_strength(get_band_count(),length/5)
end
end
do_global_wiggle_backbone(1)
band_delete()
else
p("Compressing Segment ",seg,"-",r)
sphere1={}
sphere2={}
range=0
end